% 定义材料参数
E = 200e9; % 弹性模量（Pa）
nu = 0.3; % 泊松比

% 定义加载条件
q = 10e6; % 均匀拉力（N/m）

% 定义薄板尺寸
Lx = 1; % 薄板长度（m）
Ly = 1; % 薄板宽度（m）

% 计算单元尺寸和总单元数量
dx = Lx / 20; % 单元长度（m）
dy = Ly / 20; % 单元宽度（m）
Nx = Lx / dx; % 横向单元数量
Ny = Ly / dy; % 纵向单元数量
N = Nx * Ny; % 总单元数量

% 计算节点坐标
x = zeros(Nx+1, Ny+1);
y = zeros(Nx+1, Ny+1);
for i = 1:Nx+1
  for j = 1:Ny+1
    x(i,j) = (i-1) * dx;
    y(i,j) = (j-1) * dy;
  end
end

% 建立单元和节点的关联关系
IEN = zeros(N, 3);
for i = 1:Nx
  for j = 1:Ny
    n = (j-1)*Nx + i;
    IEN(n, :) = [n, n+1, n+Nx+1];
  end
end

% 初始化总刚度矩阵和载荷向量
K = zeros((Nx+1)*(Ny+1), (Nx+1)*(Ny+1));
F = zeros((Nx+1)*(Ny+1), 1);

% 循环遍历每个单元，计算单元的面积和刚度矩阵，并将其组装到总刚度矩阵中
for e = 1:N
  nodes = IEN(e, :);
  x1 = x(nodes(1));
  x2 = x(nodes(2));
  x3 = x(nodes(3));
  y1 = y(nodes(1));
  y2 = y(nodes(2));
  y3 = y(nodes(3));

  % 计算单元面积
  A = (x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)) / 2;

  % 计算单元刚度矩阵
  Ke = (E/(1-nu^2)) * (1/(4*A)) * [...
    (y2-y3)^2+(x2-x3)^2, (x2-x3)*(y2-y3), (y2-y3)*(x2-x1);...
    (x2-x3)*(y2-y3), (x2-x3)^2+(y2-y3)^2, (x2-x3)*(y3-y1);...
    (y2-y3)*(x2-x1), (x2-x3)*(y3-y1), (y3-y1)^2+(x2-x1)^2];

  % 将单元刚度矩阵组装到总刚度矩阵中
  K(nodes, nodes) = K(nodes, nodes) + Ke;
end

% 处理边界条件
fixed_nodes = [1, Nx+1, (Nx+1)*(Ny+1)-1, (Nx+1)*(Ny+1)];
K(fixed_nodes, :) = 0;
K(:, fixed_nodes) = 0;
F(fixed_nodes) = 0;

% 求解位移矩阵
U = K \ F;

% 计算每个单元的应力
sigma = zeros(N, 3);
for e = 1:N
  nodes = IEN(e, :);
  x1 = x(nodes(1));
  x2 = x(nodes(2));
  x3 = x(nodes(3));
  y1 = y(nodes(1));
  y2 = y(nodes(2));
  y3 = y(nodes(3));

  % 计算单元位移
  u1 = U(nodes(1));
  u2 = U(nodes(2));
  u3 = U(nodes(3));

  % 计算单元应力
  B = (1 / (2 * A)) * [...
    (y2-y3), 0, (y3-y1);...
    0, (x3-x2), 0;...
    (y3-y1), 0, (y1-y2)];
  sigma(e, :) = (E / (1 - nu^2)) * B * U(nodes);
end

% 绘制应力
figure;
for e = 1:N
  nodes = IEN(e, :);
  nodes = nodes(:);

  % 计算单元位移
  u1 = U(nodes(1));
  u2 = U(nodes(2));
  u3 = U(nodes(3));

  % 计算单元应力
  sigma = (E / (1 - nu^2)) * B * U(nodes);

  % 绘制应力
  plot([x1, x2, x3], [y1, y2, y3], 'Color', [0.8, 0.8, 0.8], 'LineWidth', 1);
  text(x1, y1, sprintf('σ_x = %.2f', sigma(e, 1)), 'HorizontalAlignment', 'left');
  text(x2, y2, sprintf('σ_y = %.2f', sigma(e, 2)), 'VerticalAlignment', 'bottom');
  text(x3, y3, sprintf('σ_z = %.2f', sigma(e, 3)), 'HorizontalAlignment', 'right');
end
